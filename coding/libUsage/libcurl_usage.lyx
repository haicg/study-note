#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{amsmath}
\usepackage{fontspec}
\usepackage{xunicode}
\usepackage{xltxtra}
\usepackage{indentfirst}
\usepackage{xeCJK}
\setmainfont{Times New Roman}
\setCJKmainfont{WenQuanYi Zen Hei}
\setCJKmonofont{WenQuanYi Zen Hei}% 设置缺省中文字体
\setlength{\parindent}{2em}
%\parindent 2em   %段首缩进
\XeTeXlinebreaklocale “zh”
%\XeTeXlinebreakskip = 0pt plus 1pt minus 0.1pt
%\newcommand\Helvetica{\fontspec {Helvetica}}


\usepackage{listings}
\usepackage{color}
\usepackage{xcolor}
\lstset{numbers=left,
numberstyle=\tiny,
keywordstyle=\color{blue!70}, commentstyle=\color{red!50!green!50!blue!50},
frame=single,
rulesepcolor=\color{red!20!green!20!blue!20}
}
\lstset{breaklines}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language chinese-simplified
\language_package auto
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 2
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Libcurl 库的使用
\end_layout

\begin_layout Author
Lihaicg
\end_layout

\begin_layout Section*
1.基础知识及入门文章
\end_layout

\begin_layout Standard
libcurl就是利用不同的网络协议和对应的服务器进行连接访问。当前支持http, https, ftp, gopher, telnet, dict,
 file, 和ldap 协议。libcurl同样支持HTTPS证书授权，HTTP POST, HTTP PUT, FTP 上传, HTTP基本表单上传，代理，
cookies,和用户认证。
\end_layout

\begin_layout Standard
入门文章介绍：
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset href
LatexCommand href
name "百度百科 Libcurl"
target "http://baike.baidu.com/link?url=_WKFQs5vFORNl0-a-vwKeZJKKwSwiQbBD-nCOlAmqGw1iF_pIZlPoFGES_4ZaQJ5WGuWKp21fpoTkHiKM9EIEq"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset CommandInset href
LatexCommand href
name "libcurl教程 （libcurl -tutorial 翻译）"
target "http://www.cnblogs.com/lidabo/p/4159589.html"

\end_inset

这个是基于官方tutorial的一个翻译，挺详细的。
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset href
LatexCommand href
name "libcurl programming tutorial"
target "https://curl.haxx.se/libcurl/c/libcurl-tutorial.html"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset CommandInset href
LatexCommand href
name "libcurl overview"
target "https://curl.haxx.se/libcurl/c/libcurl.html"

\end_inset

 官方的入门介绍，主要讲如何在C 程序中使用libcurl。
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset href
LatexCommand href
name "libcurl - small example snippets"
target "https://curl.haxx.se/libcurl/c/example.html"

\end_inset

 官方的一些样例，基本能满足大部分的应用场景。
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset href
LatexCommand href
name "curl_easy_setopt - set options for a curl easy handle"
target "https://curl.haxx.se/libcurl/c/curl_easy_setopt.html"

\end_inset

set options for a curl easy handle
\end_layout

\begin_layout Standard
Libcurl的官方文档做的非常完善，基本是每个常用的函数接口都有一个example，所以基本不用看其他的文章，有问题就查一下官方的API，就足够了。
\end_layout

\begin_layout Standard
例如curl_easy_setopt这个函数的配置宏特别多，在官方网站上有对每一个宏的介绍和样例
\begin_inset CommandInset citation
LatexCommand cite
key "2"

\end_inset

。
\end_layout

\begin_layout Section*
2.HTTPS遇到的一些问题
\end_layout

\begin_layout Standard
对于证书认证的问题，有两个方法可以解决，第一个方法就是忽略证书的认证，
\end_layout

\begin_layout LyX-Code
curl_easy_setopt(curl, CURLOPT_SSL_VERIFYPEER, 0);         
\end_layout

\begin_layout LyX-Code
curl_easy_setopt(curl, CURLOPT_SSL_VERIFYHOST, 0); 
\end_layout

\begin_layout Standard
第二种方法就是先对证书进行认证
\begin_inset CommandInset citation
LatexCommand cite
key "3"

\end_inset

：
\end_layout

\begin_layout Standard
curl_easy_setopt(curl,CURLOPT_SSL_VERIFYPEER,1); 
\end_layout

\begin_layout Standard
//curl_easy_setopt(curl,CURLOPT_CAPATH,"/etc/ssl/cert/");
\end_layout

\begin_layout Standard
curl_easy_setopt(curl,CURLOPT_CAINFO,"ca-cert.pem"); 
\end_layout

\begin_layout Standard
curl_easy_setopt(curl,CURLOPT_SSL_VERIFYHOST,1); 
\end_layout

\begin_layout Section*
3.curl常用的opt设置
\end_layout

\begin_layout Standard
\SpecialChar \-

\end_layout

\begin_layout Itemize
CURL 的协议头显示：
\end_layout

\begin_deeper
\begin_layout Standard
\SpecialChar \-

\end_layout

\begin_layout Standard
/* ask libcurl to show us the verbose output */ 
\end_layout

\begin_layout Standard
curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
\end_layout

\begin_layout Standard
/*pass headers to the data stream */
\end_layout

\begin_layout Standard
curl_easy_setopt(curl, CURLOPT_HEADER, 1L); 
\end_layout

\end_deeper
\begin_layout Itemize
HTTP 的POST 行为需要的额外的设置：
\end_layout

\begin_deeper
\begin_layout Enumerate
URL的参数格式的指定为Json格式：
\end_layout

\begin_deeper
\begin_layout Standard
\SpecialChar \-

\end_layout

\begin_layout Standard
struct curl_slist *headers = NULL; 
\end_layout

\begin_layout Standard
headers = curl_slist_append(headers, "Content-Type:application/json;charset=UTF-
8"); 
\end_layout

\begin_layout Standard
curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers); // 改协议头
\end_layout

\end_deeper
\begin_layout Enumerate
指定POST的内容
\end_layout

\begin_deeper
\begin_layout Standard
curl_easy_setopt(curl, CURLOPT_POSTFIELDS, parm->parms_str); // 指定post内容
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
HTTP的GET 操作需要的设置
\end_layout

\begin_deeper
\begin_layout Standard
\SpecialChar \-

\end_layout

\begin_layout Standard
headers = curl_slist_append(headers, "Accept: Agent-007"); 
\end_layout

\begin_layout Standard
curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers); // 改协议头
\end_layout

\begin_layout Standard
curl_easy_setopt(curl, CURLOPT_HTTPGET, parm->parms_str); 
\end_layout

\end_deeper
\begin_layout Itemize
设置处理放回数据的回调函数
\end_layout

\begin_deeper
\begin_layout Itemize
curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, &process_data);
\end_layout

\begin_layout Itemize
curl_easy_setopt(curl, CURLOPT_WRITEDATA, (void *)https_response_buf); 
\end_layout

\begin_layout Itemize
size_t process_data(void *buffer, size_t size, size_t nmemb, void *user_p)
 { };
\end_layout

\begin_layout Itemize
上面前面两句是设置回调函数的名称和用户用于接受返回数据的BUF，其中https_response_buf的指向和user_p的指向是一个样子的，同时函数proc
ess_data的参数buffer是指向网络请求的返回值，这个变量会保持这一次网络请求的返回内容。
\end_layout

\begin_layout Itemize
注意在获取返回值的时候要在最后加上一个‘
\backslash
0’。
\end_layout

\begin_deeper
\begin_layout LyX-Code
if (data_size < MAX_LENGTH_HTTP_RESPONSE) { 
\end_layout

\begin_deeper
\begin_layout LyX-Code
strncpy(user_buf, (char *)buffer, data_size); 
\end_layout

\begin_layout LyX-Code
user_buf[data_size] = '
\backslash
0'; 
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
下面附上一个HTTP及HTTPS的样例：
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[language=c++]{src/libcurl_http_op.h}
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[language=c++]{src/libcurl_http_op.c}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "1"
key "1"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "百度百科 Libcurl"
target "http://baike.baidu.com/link?url=_WKFQs5vFORNl0-a-vwKeZJKKwSwiQbBD-nCOlAmqGw1iF_pIZlPoFGES_4ZaQJ5WGuWKp21fpoTkHiKM9EIEq"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "2"
key "2"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "curl_easy_setopt - set options for a curl easy handle"
target "https://curl.haxx.se/libcurl/c/curl_easy_setopt.html"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "3"
key "3"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "libcurl使用认证证书 https认证"
target "http://blog.csdn.net/chary8088/article/details/22950843"

\end_inset


\end_layout

\end_body
\end_document
