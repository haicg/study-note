#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{amsmath}
\usepackage{fontspec}
\usepackage{xunicode}
\usepackage{xltxtra}
\usepackage{indentfirst}
\usepackage{listings}
\usepackage{xeCJK}

\setmainfont{Times New Roman}

\setCJKmainfont{STKaiti}
\setCJKmonofont{STKaiti}% 设置缺省中文字体
\setlength{\parindent}{2em}
%\parindent 2em   %段首缩进

\XeTeXlinebreaklocale “zh”
%\XeTeXlinebreakskip = 0pt plus 1pt minus 0.1pt
%\newcommand\Helvetica{\fontspec {Helvetica}}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language chinese-simplified
\language_package auto
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 2
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
基于的嵌入式linux的模块配置系统学习
\end_layout

\begin_layout Author
lihai
\end_layout

\begin_layout Part
Linux kernel 的Makefile 模块配置系统学习
\end_layout

\begin_layout Section
准备知识
\end_layout

\begin_layout Subsection
Linux kernel 的介绍
\end_layout

\begin_layout Enumerate
Linux内核版本有两种
\begin_inset CommandInset citation
LatexCommand cite
key "1"

\end_inset

：稳定版和开发版 ，Linux内核版本号由3组数字组成：
\end_layout

\begin_deeper
\begin_layout Standard
第一个组数字：目前发布的内核主版本
\end_layout

\begin_layout Standard
第二组数字：偶数表示稳定版本；奇数表示开发中版本
\end_layout

\begin_layout Standard
第三组数字：修订版本号 ， 表示修改的次数
\end_layout

\begin_layout Standard
以版本号2.6.9-5.ELsmp 为例,前面两个数字合在一齐可以描述内核系列，表示该内核属于2.6版内核系列。
\end_layout

\begin_layout Standard
后面的数字5:表示这个当前内核系列2.6版本的第5次微调patch，而ELsmp指出了当前内核是为ELsmp特别调校的 EL : Enterprise
 Linux ； 
\end_layout

\begin_layout Standard
smp : 表示支持多处理器 ， 表示该内核版本支持多处理器
\end_layout

\end_deeper
\begin_layout Enumerate
内核的下载
\end_layout

\begin_deeper
\begin_layout Standard
官网下载：https://www.kernel.org/ 但是如果直接用官网下载下来的源代码编译用在自己的机器上，可鞥会有点优化上面的问题，毕竟很多的发行版本在内核
上面都进行了一些优化。
\end_layout

\begin_layout Standard
通过Debian 包管理机制下载
\end_layout

\begin_layout LyX-Code
sudo apt-cache search linux-source
\end_layout

\begin_layout LyX-Code
sudo apt-get install linux-source
\end_layout

\begin_layout LyX-Code
or
\end_layout

\begin_layout LyX-Code
sudo apt-get source linux-source 
\end_layout

\begin_layout Standard
最好用第一种方法，因为第一种方法会将配套的工具下载下来，其存放的目录在/usr/src
\end_layout

\end_deeper
\begin_layout Subsection
GCC编译器的基础知识
\end_layout

\begin_layout Standard
资料来源：
\begin_inset CommandInset href
LatexCommand href
name "5.3 manuals"
target "https://gcc.gnu.org/onlinedocs/5.3.0/"

\end_inset

 GCC5.3的相关手册
\end_layout

\begin_layout Subsubsection
GCC中DEBUG选项
\begin_inset CommandInset citation
LatexCommand cite
key "2"

\end_inset


\end_layout

\begin_layout Enumerate
-g 生成调试信息，这个是比较常用的生成调试信息的选项。
\end_layout

\begin_layout Enumerate
-ggdb 也是生成调试信息，按照GDB 的扩展，尽可能多的生成相应的调试信息。
\end_layout

\begin_layout Subsubsection
GCC 中的预处理
\begin_inset CommandInset citation
LatexCommand cite
key "preprocessor"

\end_inset


\end_layout

\begin_layout Enumerate
-DDEBUG
\end_layout

\begin_deeper
\begin_layout Standard
宏DEBUG来打开调试开关，等同于#define DEBUG， 如果在程序中使用 #ifdef DEBUG ，则可以使这个控制的代码段进行编译。
 这个动作是在预处理的时候完成的。 这个也可以看成是一个 DEBUG 的功能。这个就是使用的GCC 这个命令“-D name Predefine
 name as a macro, with definition 1.
 ” ，就是定义一个宏，并将这个这个宏的值定义为1.
\end_layout

\end_deeper
\begin_layout Subsection
Make及Makefile 的基本介绍
\end_layout

\begin_layout Subsubsection
资料整理：
\end_layout

\begin_layout Enumerate
《跟我一起写 Makefile》 这本书不错，可以作为Makefile的入门书籍。
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset href
LatexCommand href
name "Makefile 使用总结"
target "http://www.cnblogs.com/wang_yb/p/3990952.html"

\end_inset


\end_layout

\begin_layout Subsubsection
基本知识
\end_layout

\begin_layout Subsubsection
遇到的问题
\end_layout

\begin_layout Enumerate
没有删除静态库，导致库里面的内容不重新编译
\end_layout

\begin_deeper
\begin_layout Standard
因为外面的编译是依赖于一个库文件，而且库文件的源码就是在当前工程目录下面的，但是每次库里面的源码更新，就是对外面的内容没有影响。仔细检查发现是自己在clean的
时候，没有去删除掉原来的库文件没，这才导致了上面的问题。因为外面的编译只是依赖于这个库，那么只要这个库是存在的，就不会重新去编译里面的内容。同时还有一个问题就是
当这个库编译
\end_layout

\end_deeper
\begin_layout Standard

\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "1"
key "1"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Linux内核版本号命名的规则"
target "http://blog.csdn.net/ccj2020/article/details/7833035"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "2"
key "2"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "3.9 Options for Debugging Your Program or GCC"
target "https://gcc.gnu.org/onlinedocs/gcc-5.3.0/gcc/Debugging-Options.html#Debugging-Options"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "2"
key "preprocessor"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "3.11 Options Controlling the Preprocessor"
target "https://gcc.gnu.org/onlinedocs/gcc-5.3.0/gcc/Preprocessor-Options.html#Preprocessor-Options"

\end_inset


\end_layout

\end_body
\end_document
